return(mat)
}
#Quantile
qu<-function(HeartDisease){
hasil<-matrix(NA,ncol=1,nrow=nrow(HeartDisease[c(1,4,5,8,10)]))
for(i in 1:nrow(HeartDisease[c(1,4,5,8,10)])){
hasil[i]<-qchisq((i-0.5)/nrow(HeartDisease[c(1,4,5,8,10)]),ncol(HeartDisease[c(1,4,5,8,10)]))
}
return(hasil)
}
#Chi-squre plot
chiplot<-function(HeartDisease){
y<-dj(HeartDisease[c(1,4,5,8,10)])
x<-qu(HeartDisease[c(1,4,5,8,10)])
hasil<-plot(x,y,
main="Chi-Square Plot",
ylab = "Squared Distance",
xlab = "Quantile of the chi-square distribution")
print(abline(lm(y~x),col="red"))
return(hasil)
}
chiplot(as.matrix(HeartDisease[c(1,4,5,8)]))
chiplot(as.matrix(HeartDisease[c(1,4,5,8,10)]))
chiplot(as.matrix(HeartDisease[c(4,5,8,10)]))
#Square distance
dj<-function(HeartDisease){
xbar<-rata2(HeartDisease[c(1,4,5,8,10)])
S<-kov(HeartDisease[c(1,4,5,8,10)])
hasil<-matrix(NA,ncol = 1,nrow=nrow(HeartDisease[c(1,4,5,8,10)]))
for(i in 1:nrow(HeartDisease[c(1,4,5,8,10)])){
hasil[i]<-t(HeartDisease[c(1,4,5,8,10)][i,]-xbar)%*%solve(S)%*%(HeartDisease[c(1,4,5,8,10)][i,]-xbar)
}
mat<-sort(hasil)
return(mat)
}
#Quantile
qu<-function(HeartDisease){
hasil<-matrix(NA,ncol=1,nrow=nrow(HeartDisease[c(1,4,5,8,10)]))
for(i in 1:nrow(HeartDisease[c(1,4,5,8,10)])){
hasil[i]<-qchisq((i-0.5)/nrow(HeartDisease[c(1,4,5,8,10)]),ncol(HeartDisease[c(1,4,5,8,10)]))
}
return(hasil)
}
#Chi-squre plot
chiplot<-function(HeartDisease){
y<-dj(HeartDisease[c(1,4,5,8,10)])
x<-qu(HeartDisease[c(1,4,5,8,10)])
hasil<-plot(x,y,
main="Chi-Square Plot",
ylab = "Squared Distance",
xlab = "Quantile of the chi-square distribution")
print(abline(lm(y~x),col="red"))
return(hasil)
}
chiplot(as.matrix(HeartDisease[c(4,5,8,10)]))
library(car)
library(mvtnorm)
set.seed(123)
P<-3
Nj <- c(15,25,20)
Sigma <- matrix(c(16,-2, -2,9), byrow=TRUE, ncol=2)
> mu11 <- c(-4, 4)
> mu21 <- c( 3, 3)
> mu31 <- c( 1, -1)
> ## Generate Multvariate Norm
> Y11 <- round(rmvnorm(Nj[1], mean=mu11, sigma=Sigma))
> Y21 <- round(rmvnorm(Nj[2], mean=mu21, sigma=Sigma))
> Y31 <- round(rmvnorm(Nj[3], mean=mu31, sigma=Sigma))
> dataMan1 <- data.frame(Y =rbind(Y11, Y21, Y31),
+ IV=factor(rep(1:P, Nj)))
> head(dataMan1)
library(car)
library(mvtnorm)
set.seed(123)
P <- 3
Nj <- c(15, 25, 20)
Sigma <- matrix(c(16,-2, -2,9), byrow=TRUE, ncol=2)
mu11 <- c(-4, 4)
mu21 <- c( 3, 3)
mu31 <- c( 1, -1)
## Generate Multvariate Norm
Y11 <- round(rmvnorm(Nj[1], mean=mu11, sigma=Sigma))
Y21 <- round(rmvnorm(Nj[2], mean=mu21, sigma=Sigma))
Y31 <- round(rmvnorm(Nj[3], mean=mu31, sigma=Sigma))
dataMan1 <- data.frame(Y =rbind(Y11, Y21, Y31),
+ IV=factor(rep(1:P, Nj)))
head(dataMan1)
library(car)
library(mvtnorm)
set.seed(123)
P <- 3
Nj <- c(15, 25, 20)
Sigma <- matrix(c(16,-2, -2,9), byrow=TRUE, ncol=2)
mu11 <- c(-4, 4)
mu21 <- c( 3, 3)
mu31 <- c( 1, -1)
## Generate Multvariate Norm
Y11 <- round(rmvnorm(Nj[1], mean=mu11, sigma=Sigma))
Y21 <- round(rmvnorm(Nj[2], mean=mu21, sigma=Sigma))
Y31 <- round(rmvnorm(Nj[3], mean=mu31, sigma=Sigma))
dataMan1 <- data.frame(Y =rbind(Y11, Y21, Y31),
IV=factor(rep(1:P, Nj)))
head(dataMan1)
dataUTSAPG <- read.csv("D:/ARINTA/SEM 7/MTV/dataUTSAPG.csv")
View(dataUTSAPG)
View(dataUTSAPG)
library(car)
library(mvtnorm)
manRes1 <- manova(cbind(dataUTSAPG$Rata2pengluaranMakanan, dataUTSAPG$Rata2pengluaranNonMakanan, dataUTSAPG$jart, dataUTSAPG$exp_cap)~dataUTSAPG$StatusPekerjaan, data=dataUTSAPG)
summary(manRes1, tests="Wilks")
summary(manRes1, test="Pillai")
summary(manRes1, test="Roy")
summary.aov(manRes1)
par(mfrow=c(2,2))
plot(dataUTSAPG$TipeDaerah~dataUTSAPG$Rata2pengluaranMakanan, data=dataUTSAPG)
plot(dataUTSAPG$StatusPekerjaan~dataUTSAPG$Rata2pengluaranMakanan, data=dataUTSAPG)
plot(dataUTSAPG$TipeDaerah~dataUTSAPG$Rata2pengluaranNonMakanan, data=dataUTSAPG)
plot(dataUTSAPG$StatusPekerjaan~dataUTSAPG$Rata2pengluaranNonMakanan, data=dataUTSAPG)
#dev.off()
manRes2<-manova(cbind(dataUTSAPG$TipeDaerah,dataUTSAPG$StatusPekerjaan)~dataUTSAPG$Rata2pengluaranMakanan*dataUTSAPG$Rata2pengluaranNonMakanan, data=dataUTSAPG)
summary(manRes2, test="Pillai")
ManRes <- manova(cbind(dataUTSAPG$TipeDaerah,dataUTSAPG$StatusPekerjaan)~dataUTSAPG$Rata2pengluaranMakanan, data=dataUTSAPG)
summary(ManRes)
manRes2<-manova(cbind(dataUTSAPG$Rata2pengluaranMakanan,dataUTSAPG$Rata2pengluaranNonMakanan)~dataUTSAPG$TipeDaerah*dataUTSAPG$StatusPekerjaan, data=dataUTSAPG)
summary(manRes2, test="Pillai")
data.susenas.tugas.APG <- read.csv2("D:/ARINTA/SEM 7/MTV/data susenas tugas APG.csv")
View(data.susenas.tugas.APG)
library(MVN)
library(MVN)
library("mvtnorm", lib.loc="~/R/win-library/3.3")
library(MVN)
install.packages("MVN")
buah <- read.csv("C:/Users/USER/Downloads/buah.csv")
View(buah)
data(buah)
head(buah)
view(buah)
buah <- read.csv("C:/Users/USER/Downloads/buah.csv")
View(buah)
dim(buah)
head(buah)
table(buah[,9])
pca<- prcomp(buah[,1:9],scale=T)
buah <- read.csv("D:/ARINTA/SEM 7/MTV/PCA/buah.csv")
View(buah)
dim(buah)
head(buah)
pca<-prcomp(buah[,1:9],scale=T)
pca
summary(pca)
#plot of variance of each PCA/ ScreePlot
screeplot(pca, type="lines",col=8)
screeplot(pca, type="lines",col=3)
screeplot(pca, type="lines",col=8)
screeplot(pca, type="lines",col=3)
screeplot(pca, type="lines",col=2)
screeplot(pca, type="lines",col=5)
screeplot(pca, type="lines",col=4)
pca$rotation
pca2<- princomp(buah[,1:9],cor = T)
summary(pca2,loadings = T)
pca2$loadings
#biplot
biplot<-(pca,cex=0.8)
biplot(pca,cex=0.8)
biplot(pca,cex=2)
biplot(pca,cex=0.3)
biplot(pca,cex=0.5)
biplot(pca,cex=0.4)
biplot(pca,cex=0.45)
abline(h = 0, v = 0, lty = 2, col = 8)
abline(h = 0, v = 0, lty = 2, col = 5)
abline(h = 0, v = 0, lty = 2, col = 8)
library(HSAUR2)
library(HSAUR2)
head(heptathlon)
head(buah)
plot(buah)
library(boot)
cov(buah)
## Eigen Vectors & Eigen Values ##
eigen(cov(buah))
eigen(cov(pca))
library(car)
library(mvtnorm)
set.seed(123)
P<-3
Nj<-c(15,25,20)
Sigma<-matrix(c(16,-2,-2,9),byrow=TRUE,ncol=2)
mu11<-c(-4,4)
mu21<-c(3,3)
mu31<-c(1,-1)
#Generate MTV Norm
Y11<-round(rmvnorm(Nj[1],mean=mu11,sigma=Sigma))
Y21<-round(rmvnorm(Nj[2],mean=mu21,sigma=Sigma))
Y31<-round(rmvnorm(Nj[3],mean=mu31,sigma=Sigma))
Y<-rbind(Y11,Y21,Y31)
x<-factor(rep(1:3,c(15,25,20)))
manova1<-function(Y,x){
Y<-as.matrix.data.frame(Y)
x<-as.data.frame(x)
xbar<-as.matrix(colMeans(Y))
nX<-nrow(unique(x))
data<-cbind.data.frame(x,Y)
faktor<-split(data,x)
#Sum of square
B1<-B(faktor,xbar,nX)
BW1<-BW(Y)
W<-BW1-B1
#lamda
lamda<-det(W)/det(B1+W)
#degrees of freedom
df_b<-nX-1
df_bw<-nrow(Y)-1
df_w<-df_bw - df_b
n<-length(Y)
p<-ncol(Y)
#Nilai wilks, chisquare, pvalue
FF<- -(n-1-(p+nX)/2)*ln(lamda)
chi<-qchisq(0.05,p*df_b,lower.tail = F)
pvalue<-pchisq(FF,p*df_b,lower.tail = F)
#Output#
tabel<-matrix(c(lamda,FF,chi,pvalue),ncol=4,nrow=1)
colnames(tabel)<-c("Wilks","hitung","ChiValue","pvalue")
rownames(tabel)<-c("Hasil")
return(tabel)
}
ln<-function(x){
return(log(x))
}
B<-function(faktor,xbar,a){
jml<-0
hasil<-0
n<-0
for(i in 1:a){
n<-length(faktor[[i]][,2])
hasil<-as.matrix(colMeans(faktor[[i]][,-1])-xbar)
hasil<-hasil%*%t(hasil)
jml<-n*hasil+jml
}
return(jml)
}
BW<-function(Y){
hasil<-0
jml<-0
for(i in 1:nrow(Y)){
hasil<-as.matrix((Y[i,]-colMeans(Y)))
hasil<-hasil%*%t(hasil)
jml<-hasil+jml
}
return(jml)
}
manova1()
BW
library(HSAUR2)
head(buah)
buah1 <- read.csv("D:/ARINTA/SEM 7/MTV/PCA/buah1.csv")
View(buah1)
plot(buah1)
buah1 <- read.csv("D:/ARINTA/SEM 7/MTV/PCA/buah1.csv")
View(buah1)
plot(buah1)
dim(buah1)
head(buah1)
pca<-prcomp(buah1[,1:9],scale=T)
pca<-prcomp(buah1[,2:9],scale=T)
pca
summary(buah1)
round(cor(buah1.num),digits = 3)
pca2<-princomp(buah1.num,cor=T)
honda.analisis.faktor <- read.csv("D:/ARINTA/SEM 7/MTV/analisis faktor/honda analisis faktor.csv")
View(honda.analisis.faktor)
dim(honda.analisis.faktor)
head(honda.analisis.faktor)
cordata=cor(honda.analisis.faktor)
cordata
covdata=cov(honda.analisis.faktor)
covdata
fa_1-> factanal(honda.analisis.faktor,3,rotation="varimax")
fa_1<- factanal(honda.analisis.faktor,3,rotation="varimax")
fa_1
sapply(1:3,function(f) factanal(honda.analisis.faktor,factors = f,method="mle")$PVAL)
#install.packages(c("psych","GPArotation"))
library(psych)
KMO(cordata)
cortest.bartlett(cordata,n=50)
require(GPArotation)
library(GPArotation)
require(GPArotation)
fares<-fa(honda.analisis.faktor,nfactors = 3,rotate="varimax",fm="ml")
fares
eigen(honda.analisis.faktor)
honda.analisis.faktor<-as.matrix(honda.analisis.faktor)
eigen(honda.analisis.faktor)
kelahiranprematur <- read.csv("D:/ARINTA/SEM 7/MTV/klasifikasi/kelahiranprematur.csv")
View(kelahiranprematur)
library(class)
library(dplyr)
library(MASS)
library(klaR)
library(class)
library(dplyr)
library(kknn)
library(e1071)
library(MASS)
library(klaR)
RT2013a <- read.csv("D:/ARINTA/SEM 7/MTV/klasifikasi/RT2013a.csv", sep=";")
View(RT2013a)
plot(RT2013a[,-1],col=as.factor(RT2013a[,1]))
library(MASS)
library(klaR)
RT2013a <- read.csv("D:/ARINTA/SEM 7/MTV/klasifikasi/RT2013a.csv", sep=";")
View(RT2013a)
##Split the data
head(RT2013a)
sum(RT2013a)
library(MASS)
library(klaR)
RT2013a <- read.csv("D:/ARINTA/SEM 7/MTV/klasifikasi/RT2013a.csv", sep=";")
View(RT2013a)
head(RT2013a)
sum(RT2013a)
##Split the data
datatraining <- RT2013a[c(1:16000,17000:27000),]
datatest<- RT2013a[c(16001:16999,27001:29097),]
ldaRes <- lda(datatraining[,c(2,3)],grouping=datatraining[,1])
ldaRes
plot(ldaRes)
predlda<-predict(ldaRes)
##How Good is the classification
ct<- table(predicition=prelda$class,real=datatraining[,1])
ct<- table(predicition=predlda$class,real=datatraining[,1])
ct
prop.table(ct,2)
diag(prop.table(ct,2))
sum(diag(prop.table(ct,2)))
predres<-cbind(predlda$class,predlda$x)
head(predres)
##See how well the dataset
ct2<-table(predict(ldaRes,datatest[,c(2,3)])$class,datatest[,1])
ct2
sum(diag(prop.table(ct2)))
ldaRes <- lda(datatraining[,c(2,14)],grouping=datatraining[,1])
ct<- table(predicition=prelda$class,real=datatraining[,1])
ct<- table(predicition=predlda$class,real=datatraining[,1])
ct
prop.table(ct,2)
sum(diag(prop.table(ct,2)))
summary(reglog)
student_perform_mat <- read.csv("C:/Users/USER/Downloads/student_perform_mat.csv", sep=";")
View(student_perform_mat)
g3<-datano2$G3
datano2<-as.data.frame(student_perform_mat)
g3<-datano2$G3
dim(student_perform_mat)
datano2<- student_perform_mat[c()]
PolishData <- read.csv("C:/Users/USER/Downloads/PolishData.csv")
View(PolishData)
library(corrplot)
data(PolishData)
view(PolishData)
PolishData <- read.csv("C:/Users/USER/Downloads/PolishData.csv")
View(PolishData)
data(PolishData)
head(PolishData)
student_perform_mat <- read.csv("C:/Users/USER/Downloads/student_perform_mat.csv", sep=";")
View(student_perform_mat)
student_perform_mat <- read.csv("C:/Users/USER/Downloads/student_perform_mat.csv", sep=";")
View(student_perform_mat)
dim(student_perform_mat)
head(student_perform_mat)
cordata=cor(student_perform_mat)
PolishData <- read.csv("C:/Users/USER/Downloads/PolishData.csv")
View(PolishData)
pairs(PolishData)
library(corrplot)
corrplot(cor(PolishData),method="ellipse",type="upper")
##Hirarki
datano3<-scale(PolishData,scale=T)
distdatano3<-dist(datano3)
#Metode Complete
plot(res4<-hclust(distdatano3,method="complete"))
plot(res1<-hclust(distdatano3,method="single"))
plot(res4<-hclust(distdatano3,method="complete"))
rect.hclust(res4,k=2)
head(cutree(res4,h=2))
#Metode Single
data(PolishDara)
data(PolishData)
PolishData <- read.csv("C:/Users/USER/Downloads/PolishData.csv")
View(PolishData)
datatrain<-PolishData
datatrain<-PolishData[1:878,1758:1995]
datatrain<-PolishData[1:878,1758:1995,]
datatrain<-PolishData[c(1:878,1758:1995),]
datatest<-PolishData[c(879:1757,1996:2028),]
library(klaR)
dim(PolishData)
ldaRes<-lda(datatrain[,1:15],grouping=datatrain[,16])
ldaRes
predlda<- predict(ldaRes)
ct<-table(prediction=predla$class,real=datatrain[,16])
ct<-table(prediction=predlda$class,real=datatrain[,16])
ct
prop.table(ct,2)
diag(prop.table(ct,2))
sum(diag(prop.table(ct)))
predres<-cbind(predlda$class,predlda$x)
head(predres)
##cek datatest
ct2<-table(predict(ldaRes,datatest[,1:15])$class,datates[,16])
ct2<-table(predict(ldaRes,datatest[,1:15])$class,datatest[,16])
ct2
sum(diag(prop.table(ct2)))
#knn
library(class)
require(e1071)
rep<-10
kfoldcv<-matrix(NA,rep,10)
set.seed(123)
for(i in 1:rep){}
for(i in 1:rep){
kfold<-tune.knn(datatrain[,1:15],as.factor(datatrain[,16]),k=1:10,tunecontrol=tune.control(sampling="cross",cross=10))
kfoldcv[i,]<-summary(kfold)$class[,2]
cat(i)
}
kfoldcv[i,]<-summary(kfold)$performances[,2]
for(i in 1:rep){
kfold<-tune.knn(datatrain[,1:15],as.factor(datatrain[,16]),k=1:10,tunecontrol=tune.control(sampling="cross",cross=10))
kfoldcv[i,]<-summary(kfold)$performances[,2]
cat(i)
}
colnames(kfoldcv)<-1:10
boxplot(kfoldcv,ylab="misclassification",xlab="k",main="10-folds cv,100 times")
KnnRes1<-knn(datatrain[,-16],datatest[,-16],datatrain[,16],k=1,prob=TRUE)
KnnRes1<-knn(datatrain[,-8],datatest[,-8],datatrain[,8],k=1,prob=TRUE)
KnnRes1<-knn(datatrain[,-8],datatest[,-8],datatrain[,8],k=1,prob=TRUE)
KnnRes1<-knn(datatrain[,-16],datatest[,-16],datatrain[,16],k=1,prob=TRUE)
ctk<-table(KnnRes1,datatest[,8])
library(lsr)
library(lsr)
cramersv <- read.csv("D:/ARINTA/SEM 8/NONPAR/cramersv.csv")
View(cramersv)
row.names(cramersv)<-cramersv$X
cramersv$X<-NULL
chisq.test(cramersv)
library(lsr)
cramersV(cramersv)
cramersv2 <- read.csv("D:/ARINTA/SEM 8/NONPAR/cramersv2.csv")
View(cramersv2)
row.names(cramersv2)<-cramersv2$X
View(cramersv2)
View(cramersv)
View(cramersv2)
View(cramersv)
View(cramersv2)
row.names(cramersv2)<-cramersv2$X
cramersv2$X<-NULL
chisq.test(cramersv2)
library(lsr)
cramersV(cramersv2)
library(RMySQL)
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='validasiimpor', host='localhost')
rs = dbSendQuery(mydb, 'select CIFKG from hs14')
a = fetch(rs, n=-1)
summary(a)
qqnorm(a$CIFKG)
qqline(a$CIFKG, col="blue")
library(MASS)
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='validasiimpor', host='localhost')
rs = dbSendQuery(mydb, 'select CIFKG from hs14')
a = fetch(rs, n=-1)
qqnorm(a$CIFKG)
qqline(a$CIFKG, col="blue")
library(MASS)
boxcox(a$CIFKG[a$CIFKG > 0]~1)
library(car)
powerTransform(a$CIFKG[a$CIFKG > 0])
p<-powerTransform(a$CIFKG[a$CIFKG > 0])
y<-bcPower(a$CIFKG[a$CIFKG > 0],p$lambda)
summary(y)
getwd()
setwd("../../../xampp/htdocs/validasiImpor/output95")
getwd()
setwd("../../../xampp/htdocs/validasiImpor/output95")
setwd("../../../xampp/htdocs/validasiImpor/output95")
getwd()
setwd("../../../xampp/htdocs/validasiImpor/output95/")
setwd("../../../xampp/htdocs/validasiImpor/js")
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
library(RMySQL)
mydb = dbConnect(MySQL(), user='root', password='', dbname='validasiimpor', host='localhost')
rs = dbSendQuery(mydb, 'select CIFKG from hs14')
a = fetch(rs, n=-1)
qqnorm(a$CIFKG)
qqline(a$CIFKG, col="blue")
library(MASS)
boxcox(a$CIFKG[a$CIFKG > 0]~1)
library(car)
powerTransform(a$CIFKG[a$CIFKG > 0])
p<-powerTransform(a$CIFKG[a$CIFKG > 0])
y<-bcPower(a$CIFKG[a$CIFKG > 0],p$lambda)
q <- tableGrob(t(summary(y)))
mydataplot <- grid.arrange(q)
png(filename = "output.png")
plot(mydataplot)
dev.off()
